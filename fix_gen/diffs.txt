Diffs for file src/pattern/Tast_pattern.ml
293,295c293,295
< let path_of_list xs =
<   match xs with
<   | [] -> failwith "Bad argument: path_of_list"
---
> let path_of_list  =
>   function             
>     [] -> failwith "Bad argument: path_of_list"

Diffs for file src/fix/refactoring/ProposeFunction.ml
63,65c63,65
< let a x = 
<   match x with 
<   | true -> 1
---
> let a  = 
>   function             
>     true -> 1

Diffs for file src/fix/refactoring/IfBool.ml
98c98
< let a x = if true then x else x + 1
---
> let a x = x
100c100
< let a x = if x then true else false
---
> let a x = x
102c102
< let a x = if x then false else true
---
> let a x = not x
104c104
< let a x y = if x && true then y else y + 1
---
> let a x y = if x then y else y + 1

Diffs for file src/pattern/Tast_pattern.ml
293,295c293,295
< let path_of_list xs =
<   match xs with
<   | [] -> failwith "Bad argument: path_of_list"
---
> let path_of_list  =
>   function             
>     [] -> failwith "Bad argument: path_of_list"

Diffs for file src/fix/refactoring/ProposeFunction.ml
63,65c63,65
< let a x = 
<   match x with 
<   | true -> 1
---
> let a  = 
>   function             
>     true -> 1

Diffs for file src/fix/refactoring/IfBool.ml
98c98
< let a x = if true then x else x + 1
---
> let a x = x
100c100
< let a x = if x then true else false
---
> let a x = x
102c102
< let a x = if x then false else true
---
> let a x = not x
104c104
< let a x y = if x && true then y else y + 1
---
> let a x y = if x then y else y + 1

